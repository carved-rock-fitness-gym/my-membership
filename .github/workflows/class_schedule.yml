name: Class Schedule CI/CD

on:
    push:
      paths:
        - 'src/features/class-schedule/**'
        - 'Dockerfile'
      branches:
        - main
    pull_request:
      paths:
        - 'src/features/class-schedule/**'
        - 'Dockerfile'
    workflow_dispatch:

jobs:
  build-and-test:
    runs-on:
      group: development
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run lint
        run: NODE_OPTIONS=--experimental-vm-modules npm run lint

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: carved-rock/class-schedule:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Cypress tests
        uses: cypress-io/github-action@v5
        with:
          start: npm run dev
          wait-on: 'http://localhost:5173'
          config-file: cypress.config.ts

  deploy-staging:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: staging
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Build for staging
        run: |
          echo "Building for staging environment..."
          docker build -t carved-rock/class-schedule:staging .

      - name: Deploy to staging
        run: |
          echo "Deploying class schedule feature to staging..."
          echo "Running smoke tests against staging deployment..."

  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Build for production
        run: |
          echo "Building for production environment..."
          docker build -t carved-rock/class-schedule:production .

      - name: Deploy to production
        run: |
          echo "Deploying class schedule feature to production..."
